/*
 * This file is generated by jOOQ.
 */
package com.experts.core.biller.statemachine.api.model.jooq.tables;


import com.experts.core.biller.statemachine.api.model.jooq.Indexes;
import com.experts.core.biller.statemachine.api.model.jooq.Keys;
import com.experts.core.biller.statemachine.api.model.jooq.Public;
import com.experts.core.biller.statemachine.api.model.jooq.tables.records.TxMenuRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TxMenu extends TableImpl<TxMenuRecord> {

    private static final long serialVersionUID = 1465725284;

    /**
     * The reference instance of <code>public.tx_menu</code>
     */
    public static final TxMenu TX_MENU = new TxMenu();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TxMenuRecord> getRecordType() {
        return TxMenuRecord.class;
    }

    /**
     * The column <code>public.tx_menu.id</code>.
     */
    public final TableField<TxMenuRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tx_menu.icon_class</code>.
     */
    public final TableField<TxMenuRecord, String> ICON_CLASS = createField("icon_class", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tx_menu.is_active</code>.
     */
    public final TableField<TxMenuRecord, Short> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.tx_menu.is_page</code>.
     */
    public final TableField<TxMenuRecord, Short> IS_PAGE = createField("is_page", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.tx_menu.menu_order</code>.
     */
    public final TableField<TxMenuRecord, Short> MENU_ORDER = createField("menu_order", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.tx_menu.menu_text</code>.
     */
    public final TableField<TxMenuRecord, String> MENU_TEXT = createField("menu_text", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tx_menu.requires_privilige</code>.
     */
    public final TableField<TxMenuRecord, Short> REQUIRES_PRIVILIGE = createField("requires_privilige", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.tx_menu.page_id</code>.
     */
    public final TableField<TxMenuRecord, Long> PAGE_ID = createField("page_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.tx_menu.parent_id</code>.
     */
    public final TableField<TxMenuRecord, Long> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.tx_menu</code> table reference
     */
    public TxMenu() {
        this(DSL.name("tx_menu"), null);
    }

    /**
     * Create an aliased <code>public.tx_menu</code> table reference
     */
    public TxMenu(String alias) {
        this(DSL.name(alias), TX_MENU);
    }

    /**
     * Create an aliased <code>public.tx_menu</code> table reference
     */
    public TxMenu(Name alias) {
        this(alias, TX_MENU);
    }

    private TxMenu(Name alias, Table<TxMenuRecord> aliased) {
        this(alias, aliased, null);
    }

    private TxMenu(Name alias, Table<TxMenuRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TxMenu(Table<O> child, ForeignKey<O, TxMenuRecord> key) {
        super(child, key, TX_MENU);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TX_MENU_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TxMenuRecord> getPrimaryKey() {
        return Keys.TX_MENU_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TxMenuRecord>> getKeys() {
        return Arrays.<UniqueKey<TxMenuRecord>>asList(Keys.TX_MENU_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TxMenuRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TxMenuRecord, ?>>asList(Keys.TX_MENU__FK7THA45RNUYC3K8TM8ODOP0LGI, Keys.TX_MENU__FKMFGJ0GN9Y8PNY1RD31OCGPWB7);
    }

    public TxPage txPage() {
        return new TxPage(this, Keys.TX_MENU__FK7THA45RNUYC3K8TM8ODOP0LGI);
    }

    public com.experts.core.biller.statemachine.api.model.jooq.tables.TxMenu txMenu() {
        return new com.experts.core.biller.statemachine.api.model.jooq.tables.TxMenu(this, Keys.TX_MENU__FKMFGJ0GN9Y8PNY1RD31OCGPWB7);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxMenu as(String alias) {
        return new TxMenu(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxMenu as(Name alias) {
        return new TxMenu(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TxMenu rename(String name) {
        return new TxMenu(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TxMenu rename(Name name) {
        return new TxMenu(name, null);
    }
}
