/*
 * This file is generated by jOOQ.
 */
package com.experts.core.biller.statemachine.api.jooq.tables;


import com.experts.core.biller.statemachine.api.jooq.Indexes;
import com.experts.core.biller.statemachine.api.jooq.Keys;
import com.experts.core.biller.statemachine.api.jooq.Public;
import com.experts.core.biller.statemachine.api.jooq.tables.records.CustomrevisionentityRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Customrevisionentity extends TableImpl<CustomrevisionentityRecord> {

    private static final long serialVersionUID = -301270565;

    /**
     * The reference instance of <code>public.customrevisionentity</code>
     */
    public static final Customrevisionentity CUSTOMREVISIONENTITY = new Customrevisionentity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomrevisionentityRecord> getRecordType() {
        return CustomrevisionentityRecord.class;
    }

    /**
     * The column <code>public.customrevisionentity.id</code>.
     */
    public final TableField<CustomrevisionentityRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.customrevisionentity.createddate</code>.
     */
    public final TableField<CustomrevisionentityRecord, Timestamp> CREATEDDATE = createField("createddate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.customrevisionentity.lastmodifiedby</code>.
     */
    public final TableField<CustomrevisionentityRecord, String> LASTMODIFIEDBY = createField("lastmodifiedby", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.customrevisionentity.modifieddate</code>.
     */
    public final TableField<CustomrevisionentityRecord, Timestamp> MODIFIEDDATE = createField("modifieddate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.customrevisionentity.username</code>.
     */
    public final TableField<CustomrevisionentityRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.customrevisionentity.login</code>.
     */
    public final TableField<CustomrevisionentityRecord, String> LOGIN = createField("login", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.customrevisionentity.customtrackingentity_customid</code>.
     */
    public final TableField<CustomrevisionentityRecord, Integer> CUSTOMTRACKINGENTITY_CUSTOMID = createField("customtrackingentity_customid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.customrevisionentity.customtrackingentity_id</code>.
     */
    public final TableField<CustomrevisionentityRecord, Integer> CUSTOMTRACKINGENTITY_ID = createField("customtrackingentity_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.customrevisionentity</code> table reference
     */
    public Customrevisionentity() {
        this(DSL.name("customrevisionentity"), null);
    }

    /**
     * Create an aliased <code>public.customrevisionentity</code> table reference
     */
    public Customrevisionentity(String alias) {
        this(DSL.name(alias), CUSTOMREVISIONENTITY);
    }

    /**
     * Create an aliased <code>public.customrevisionentity</code> table reference
     */
    public Customrevisionentity(Name alias) {
        this(alias, CUSTOMREVISIONENTITY);
    }

    private Customrevisionentity(Name alias, Table<CustomrevisionentityRecord> aliased) {
        this(alias, aliased, null);
    }

    private Customrevisionentity(Name alias, Table<CustomrevisionentityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Customrevisionentity(Table<O> child, ForeignKey<O, CustomrevisionentityRecord> key) {
        super(child, key, CUSTOMREVISIONENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CUSTOMREVISIONENTITY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CustomrevisionentityRecord> getPrimaryKey() {
        return Keys.CUSTOMREVISIONENTITY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CustomrevisionentityRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomrevisionentityRecord>>asList(Keys.CUSTOMREVISIONENTITY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CustomrevisionentityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CustomrevisionentityRecord, ?>>asList(Keys.CUSTOMREVISIONENTITY__FKLN0KFND2HQV5XM9D8LISY3YK2);
    }

    public Customtrackingentity customtrackingentity() {
        return new Customtrackingentity(this, Keys.CUSTOMREVISIONENTITY__FKLN0KFND2HQV5XM9D8LISY3YK2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Customrevisionentity as(String alias) {
        return new Customrevisionentity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Customrevisionentity as(Name alias) {
        return new Customrevisionentity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Customrevisionentity rename(String name) {
        return new Customrevisionentity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Customrevisionentity rename(Name name) {
        return new Customrevisionentity(name, null);
    }
}
