/*
 * This file is generated by jOOQ.
 */
package com.experts.core.biller.statemachine.api.jooq.tables;


import com.experts.core.biller.statemachine.api.jooq.Indexes;
import com.experts.core.biller.statemachine.api.jooq.Keys;
import com.experts.core.biller.statemachine.api.jooq.Public;
import com.experts.core.biller.statemachine.api.jooq.tables.records.BillerServiceCatogreyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BillerServiceCatogrey extends TableImpl<BillerServiceCatogreyRecord> {

    private static final long serialVersionUID = 283382806;

    /**
     * The reference instance of <code>public.biller_service_catogrey</code>
     */
    public static final BillerServiceCatogrey BILLER_SERVICE_CATOGREY = new BillerServiceCatogrey();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BillerServiceCatogreyRecord> getRecordType() {
        return BillerServiceCatogreyRecord.class;
    }

    /**
     * The column <code>public.biller_service_catogrey.id</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.biller_service_catogrey.createddate</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, Timestamp> CREATEDDATE = createField("createddate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.biller_service_catogrey.lastmodifiedby</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, String> LASTMODIFIEDBY = createField("lastmodifiedby", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.biller_service_catogrey.modifieddate</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, Timestamp> MODIFIEDDATE = createField("modifieddate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.biller_service_catogrey.username</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.biller_service_catogrey.service</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, String> SERVICE = createField("service", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>public.biller_service_catogrey.type</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.biller_service_catogrey.version</code>.
     */
    public final TableField<BillerServiceCatogreyRecord, Integer> VERSION = createField("version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.biller_service_catogrey</code> table reference
     */
    public BillerServiceCatogrey() {
        this(DSL.name("biller_service_catogrey"), null);
    }

    /**
     * Create an aliased <code>public.biller_service_catogrey</code> table reference
     */
    public BillerServiceCatogrey(String alias) {
        this(DSL.name(alias), BILLER_SERVICE_CATOGREY);
    }

    /**
     * Create an aliased <code>public.biller_service_catogrey</code> table reference
     */
    public BillerServiceCatogrey(Name alias) {
        this(alias, BILLER_SERVICE_CATOGREY);
    }

    private BillerServiceCatogrey(Name alias, Table<BillerServiceCatogreyRecord> aliased) {
        this(alias, aliased, null);
    }

    private BillerServiceCatogrey(Name alias, Table<BillerServiceCatogreyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BillerServiceCatogrey(Table<O> child, ForeignKey<O, BillerServiceCatogreyRecord> key) {
        super(child, key, BILLER_SERVICE_CATOGREY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BILLER_SERVICE_CATOGREY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BillerServiceCatogreyRecord> getPrimaryKey() {
        return Keys.BILLER_SERVICE_CATOGREY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BillerServiceCatogreyRecord>> getKeys() {
        return Arrays.<UniqueKey<BillerServiceCatogreyRecord>>asList(Keys.BILLER_SERVICE_CATOGREY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillerServiceCatogrey as(String alias) {
        return new BillerServiceCatogrey(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BillerServiceCatogrey as(Name alias) {
        return new BillerServiceCatogrey(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BillerServiceCatogrey rename(String name) {
        return new BillerServiceCatogrey(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BillerServiceCatogrey rename(Name name) {
        return new BillerServiceCatogrey(name, null);
    }
}
