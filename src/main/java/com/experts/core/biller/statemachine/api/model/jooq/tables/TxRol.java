/*
 * This file is generated by jOOQ.
 */
package com.experts.core.biller.statemachine.api.model.jooq.tables;


import com.experts.core.biller.statemachine.api.model.jooq.Indexes;
import com.experts.core.biller.statemachine.api.model.jooq.Keys;
import com.experts.core.biller.statemachine.api.model.jooq.Public;
import com.experts.core.biller.statemachine.api.model.jooq.tables.records.TxRolRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TxRol extends TableImpl<TxRolRecord> {

    private static final long serialVersionUID = -1654421665;

    /**
     * The reference instance of <code>public.tx_rol</code>
     */
    public static final TxRol TX_ROL = new TxRol();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TxRolRecord> getRecordType() {
        return TxRolRecord.class;
    }

    /**
     * The column <code>public.tx_rol.id</code>.
     */
    public final TableField<TxRolRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tx_rol.aciklama</code>.
     */
    public final TableField<TxRolRecord, String> ACIKLAMA = createField("aciklama", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tx_rol.rol_adi</code>.
     */
    public final TableField<TxRolRecord, String> ROL_ADI = createField("rol_adi", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>public.tx_rol</code> table reference
     */
    public TxRol() {
        this(DSL.name("tx_rol"), null);
    }

    /**
     * Create an aliased <code>public.tx_rol</code> table reference
     */
    public TxRol(String alias) {
        this(DSL.name(alias), TX_ROL);
    }

    /**
     * Create an aliased <code>public.tx_rol</code> table reference
     */
    public TxRol(Name alias) {
        this(alias, TX_ROL);
    }

    private TxRol(Name alias, Table<TxRolRecord> aliased) {
        this(alias, aliased, null);
    }

    private TxRol(Name alias, Table<TxRolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TxRol(Table<O> child, ForeignKey<O, TxRolRecord> key) {
        super(child, key, TX_ROL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TX_ROL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TxRolRecord> getPrimaryKey() {
        return Keys.TX_ROL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TxRolRecord>> getKeys() {
        return Arrays.<UniqueKey<TxRolRecord>>asList(Keys.TX_ROL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxRol as(String alias) {
        return new TxRol(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxRol as(Name alias) {
        return new TxRol(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TxRol rename(String name) {
        return new TxRol(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TxRol rename(Name name) {
        return new TxRol(name, null);
    }
}
