/*
 * This file is generated by jOOQ.
 */
package com.experts.core.biller.statemachine.api.model.jooq.tables;


import com.experts.core.biller.statemachine.api.model.jooq.Indexes;
import com.experts.core.biller.statemachine.api.model.jooq.Keys;
import com.experts.core.biller.statemachine.api.model.jooq.Public;
import com.experts.core.biller.statemachine.api.model.jooq.tables.records.TxYetkiRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TxYetki extends TableImpl<TxYetkiRecord> {

    private static final long serialVersionUID = -703942477;

    /**
     * The reference instance of <code>public.tx_yetki</code>
     */
    public static final TxYetki TX_YETKI = new TxYetki();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TxYetkiRecord> getRecordType() {
        return TxYetkiRecord.class;
    }

    /**
     * The column <code>public.tx_yetki.id</code>.
     */
    public final TableField<TxYetkiRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.tx_yetki.aciklama</code>.
     */
    public final TableField<TxYetkiRecord, String> ACIKLAMA = createField("aciklama", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tx_yetki.yetki_adi</code>.
     */
    public final TableField<TxYetkiRecord, String> YETKI_ADI = createField("yetki_adi", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.tx_yetki.menu_id</code>.
     */
    public final TableField<TxYetkiRecord, Long> MENU_ID = createField("menu_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.tx_yetki</code> table reference
     */
    public TxYetki() {
        this(DSL.name("tx_yetki"), null);
    }

    /**
     * Create an aliased <code>public.tx_yetki</code> table reference
     */
    public TxYetki(String alias) {
        this(DSL.name(alias), TX_YETKI);
    }

    /**
     * Create an aliased <code>public.tx_yetki</code> table reference
     */
    public TxYetki(Name alias) {
        this(alias, TX_YETKI);
    }

    private TxYetki(Name alias, Table<TxYetkiRecord> aliased) {
        this(alias, aliased, null);
    }

    private TxYetki(Name alias, Table<TxYetkiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TxYetki(Table<O> child, ForeignKey<O, TxYetkiRecord> key) {
        super(child, key, TX_YETKI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TX_YETKI_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TxYetkiRecord> getPrimaryKey() {
        return Keys.TX_YETKI_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TxYetkiRecord>> getKeys() {
        return Arrays.<UniqueKey<TxYetkiRecord>>asList(Keys.TX_YETKI_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TxYetkiRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TxYetkiRecord, ?>>asList(Keys.TX_YETKI__FKI36LTSB5IU3TK4YLVDJOGLS4A);
    }

    public TxMenu txMenu() {
        return new TxMenu(this, Keys.TX_YETKI__FKI36LTSB5IU3TK4YLVDJOGLS4A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxYetki as(String alias) {
        return new TxYetki(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TxYetki as(Name alias) {
        return new TxYetki(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TxYetki rename(String name) {
        return new TxYetki(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TxYetki rename(Name name) {
        return new TxYetki(name, null);
    }
}
