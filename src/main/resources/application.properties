spring.datasource.url = jdbc:postgresql://localhost:5432/jta-latest
spring.datasource.username = root
spring.datasource.password = opc@2018
spring.datasource.driver-class-name=org.postgresql.Driver
org.spockframework.mock.ignoreByteBuddy=false


spring.jpa.properties.hibernate.cache.inifinispan.statistics = true spring.jpa.properties.hibernate.cache.infinispan.query.cfg = distributed- query spring.jpa.properties.hibernate.cache.default_cache_concurrency_strateg y = TRANSACTIONAL spring.jpa.properties.javax.persistence.sharedCache.mode = ALL – aeroboy Jan 23 '17 at 17:58
spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform
spring.jpa.properties.hibernate.transaction.coordinator_class=jta 
spring.jpa.properties.hibernate.ogm.datastore.provider=infinispan 
spring.jpa.properties.hibernate.cache.infinispan.cachemanager=java:jboss/infinispan/container/hibernate
spring.jpa.properties.hibernate.transaction.manager_lookup_class=org.hibernate.transaction.JBossTransactionManagerLookup
spring.jpa.properties.hibernate.cache.use_structured_entries=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.infinispan.InfinispanRegionFactory

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = create
json.log.pretty=true
spring.application.name="core-engine"
server.contextPath=/
jdbc.connectionDatabaseName=billmain
jdbc.connectionPassword=billmain
jdbc.connectionPortNumber=1251
#jdbc.connectionServerName=
#jdbc.connectionUrl=
jdbc.connectionUrl=jdbc:oracle:thin:@192.168.10.9:1251/dv10g
#jdbc.connectionUrl=jdbc:hsqldb:mem:people
jdbc.connectionUserName=billmain
jdbc.dataSourceClassName=oracle.jdbc.xa.OracleXADataSource
jms.brokerUrl=vm://localhost:?persist=false
server.port=3099
server.address=192.168.1.103
spring.boot.admin.url=http://192.168.1.103:3070

info.app.encoding=UTF-8
info.app.java.source=1.8
info.app.java.target=1.8
eureka.client.enabled=true
eureka.instance.ip-address=localhost
eureka.client.eureka-server-port=8761
salt=12345678901234567890123456789012
spring.application.admin.enabled=true
spring.jackson.serialization.indent_output=true
#spring.jpa.properties.hibernate.cache.region.factory_class=infinispan
management.endpoints.jms.exposure.include=env,metrics,trace,dump,jolokia,configprops,trace,logfile,refresh,flyway,liquibase,heapdump
logging.level.org.pac4j.springframework.web=DEBUG
logging.level.org.pac4j.core.engine=DEBUG
spring.data.solr.zk-host= http://localhost:2181
spring.data.solr.host= http://localhost:8983/solr
solr.host=http://localhost:8983/solr
spring.cache.ehcache.config= classpath:ehcache.xml
#spring.boot.admin.client.enabled=true
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
hibernate.cache.hazelcast.instance_name=instance-latest
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
cloud.config.uri=http://localhost:8888
spring.data.elasticsearch.cluster-nodes=localhost:9300
spring.cloud.config.server.git.uri=https://github.com/garystafford/spring-cloud-demo-config-repo.git
spring.cloud.config.allow-override=true
spring.cloud.consul.discovery.hostname=192.168.10.91:8500
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.ip-address=192.168.10.91
spring.cloud.consul.host=192.168.10.91
spring.cloud.discovery.enabled=true
service.endpoint=http://localhost:3070/service/inquiry
service.soap.action=https://inquiry.wordpress.com/inquiry
service.user.id=inquiry
service.user.password=inquiry
marshaller.packages.to.scan=com.experts.core.biller.statemachine.api.soapService
unmarshaller.packages.to.scan=com.experts.core.biller.statemachine.api.soapService
spring.cloud.consul.discovery.scheme=http
management.server.port=3070
management.server.servlet.context-path=/apiServlet
management.trace.http.enabled=true
management.server.address=192.168.10.91
management.context-path=/api
spring.boot.admin.client.health-url=http://192.168.10.91:3070/api/health
management.metrics.export.prometheus.enabled=false
management.endpoint.metrics.enabled=true
management.endpoint.conditions.enabled=true
management.endpoint.env.enabled=true
#management.endpoint.health.enabled=false
management.endpoint.loggers.enabled=true
management.endpoint.info.enabled=true
management.endpoint.shutdown.enabled=true
management.endpoint.logfile.enabled=true
management.info.defaults.enabled=true
management.endpoint.restart.enabled=true
management.endpoint.resume.enabled=true
management.endpoint.jolokia.enabled=true
management.metrics.use-global-registry=true
management.metrics.export.datadog.enabled=true
management.metrics.export.simple.enabled=true
management.endpoint.sessions.enabled=true
spring.boot.admin.discovery.enabled=true
spring.boot.admin.routes.endpoints=management.endpoints.web.exposure.include=env,metrics,trace,dump,jolokia,configprops,trace,logfile,refresh,flyway,liquibase,heapdump
#spring.cloud.dataflow.features.streams-enabled = true
#spring.cloud.dataflow.features.tasks-enabled = true
#spring.cloud.dataflow.features.analytics-enabled = true
#spring.cloud.dataflow.features.skipper-enabled = true
#spring.cloud.deployer.cloudfoundry.space=development
#spring.cloud.deployer.cloudfoundry.url=http://localhost:3070/dashboard
#spring.cloud.deployer.cloudfoundry.domain=experts.ps
#spring.cloud.dataflow.features.schedules-enabled=true
#spring.cloud.dataflow.version-info.dependency-fetch.enabled=true
#spring.cloud.dataflow.metrics.collector.password=admin
#spring.cloud.dataflow.metrics.collector.username=admin
#spring.cloud.dataflow.security.authorization.dashboard-url=http://localhost:3070/dashboard
#spring.cloud.dataflow.security.authorization.enabled=false
#spring.cloud.dataflow.security.authorization.permit-all-paths=/*
#spring.boot.admin.register-once=true
spring.cloud.stream.default-binder=consul
#dataflow.skip-ssl-validation=true
#hystrix.stream.queue.enabled=true
#spring.cloud.config.enabled=false
management.endpoints.web.exposure.include=env,metrics,trace,dump,jolokia,configprops,trace,logfile,refresh,flyway,liquibase,heapdump
management.endpoints.jmx.exposure.include=env,metrics,trace,dump,jolokia,configprops,trace,logfile,refresh,flyway,liquibase,heapdump
management.endpoint.mappings.enabled=true
management.metrics.binders.jvm.enabled=true
management.health.jms.enabled=false
management.health.status.order=FATAL, DOWN, OUT_OF_SERVICE, UNKNOWN, UP
management.trace.include=request-headers,response-headers,cookies,errors,parameters
spring.security.enabled=false
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#management.health.db.enabled=true
#management.health.consul.enabled=true
security.basic.enabled=false
management.security.enabled=false
logging.level.root=info,error,debug
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#spring.kafka.bootstrap-servers=${CLOUDKARAFKA_BROKERS:velomobile-01.srvs.cloudkafka.com:9094,velomobile-02.srvs.cloudkafka.com:9094,velomobile-03.srvs.cloudkafka.com:9094}
#spring.kafka.properties.security.protocol=SASL_SSL
#spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
#spring.kafka.consumer.group-id=${CLOUDKARAFKA_USERNAME}-consumers

spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=sample.kafka



client.default-uri: http://localhost:3070/ws/wsdl_prepaid.wsdl?wsdl
client.ssl.key-store: classpath: biller_core_keystore.jks
client.ssl.key-store-password: opc@2018
client.ssl.key-password: opc@2018
client.ssl.trust-store: classpath: biller_core_keystore.jks
client.ssl.trust-store-password: opc@2018





